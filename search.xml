<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo博客写作指南</title>
    <url>/2020/09/04/Hexo%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<blockquote>
<p>本文修改自yearito的博客<br>原文：<a href="http://yearito.cn/posts/hexo-writing-skills.html" target="_blank" rel="noopener">http://yearito.cn/posts/hexo-writing-skills.html</a></p>
</blockquote>
<a id="more"></a>

<h2 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h2><p>在博客目录下执行如下命令新建一篇文章</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new \[layout\] &lt;title&gt;</span><br><span class="line">---</span><br><span class="line">$ hexo n &quot;title&quot;</span><br></pre></td></tr></table></figure>

<p>第一种方式如果未指定文章的布局（layout），则默认使用 <code>post</code> 布局，生成的文档存放于 <code>source\_posts\</code> 目录下，打开后使用 Markdown 语法进行写作，保存后刷新浏览器即可看到文章。</p>
<h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>布局可以理解为一个写作模板，基于布局生成的文档将会继承布局的样式。</p>
<p>Hexo 默认有三种布局：<code>post</code>、 <code>page</code> 和 <code>draft</code>，用户可以在 <code>scaffolds</code> 目录下新建文档来自定义布局格式，还可以修改站点配置文件中的 <code>default_layout</code>参数来指定生成文档时的默认布局。</p>
<p><strong>文章（post）</strong></p>
<p>基于 <code>post</code> 布局生成的文档存在于 <code>source\_posts\</code> 目录下，该目录下的文档会作为博客正文显示在网站中。</p>
<p><strong>页面（page）</strong></p>
<p><code>page</code> 布局用于生成类似 <strong>首页</strong> 和 <strong>归档</strong> 这样的页面。默认的 Next 主题样式中只包含首页和归档这两个链接，可以通过修改主题配置文件中的 <code>menu</code> 字段来新增更多页面菜单。</p>
<p>themes\next\_config.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line">+ tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">+ categories: &#x2F;categories&#x2F; || th</span><br><span class="line">+ archives: &#x2F;archives&#x2F; || archive</span><br></pre></td></tr></table></figure>

<p>其中，<code>||</code> 之前的值表示菜单链接，之后的值表示所用的 <code>FontAwesome</code> 图标名称。</p>
<p>刷新页面后即可看到页面内多了几项菜单。此时点击 <strong>关于</strong>、<strong>标签</strong> 和 <strong>分类</strong> 都会跳转到 404 页面，原因是我们只开放了页面入口，却没有创造对应于链接的页面视图，此时就需要通过 <code>hexo new page &lt;title&gt;</code> 命令来新建页面。</p>
<p>基于 <code>page</code> 布局的新建命令将会在 <code>source</code> 目录下新建一个 <code>&lt;title&gt;</code> 文件夹，并在该文件夹下创建一个 <code>index.md</code> 文件，编辑该文件即可修改页面内容。例如，通过 <code>hexo new page tags</code> 命令将会生成如下目录。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">└──  source             </span><br><span class="line">  ├── \_posts          </span><br><span class="line">  └── tags</span><br><span class="line">    └── index.md</span><br></pre></td></tr></table></figure>

<p>编辑 <code>index.md</code> 文件，在 Front-Matter 中添加 <code>type: tags</code> ，Next 主题将自动在该页面内显示标签云。打开<code>source\tags\index.md</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">  date: 2018-10-19 22:57:00</span><br><span class="line">+ type: tags</span><br></pre></td></tr></table></figure>

<p>Front-Matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定本文件的各种参数值。在菜单中点击 <strong>标签</strong> 跳转到刚创建的标签页面。</p>
<p><strong>草稿（draft）</strong></p>
<p><code>draft</code> 布局用于创建草稿，生成的文档存在于<code>source\_drafts\</code>目录中，默认配置下将不会把该目录下的文档渲染到网站中。通过以下命令将草稿发布为正式文章：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo publish &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>该命令会将 source\_drafts\ 目录下以 开头的草稿发布到 sources\_posts\ 目录下。另外，<code>hexo publish *</code> 会将最新创建的一篇草稿发布为正式文章，并以 Front-Matter 中的 title 作为文件名称。</p>
<p>考虑到一些文章可能需要数天才能完成，建议将新建文档时的默认布局设置为 <code>draft</code>。打开站点配置文件，修改为下例所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\- default\_layout: post</span><br><span class="line">+ default\_layout: draft</span><br></pre></td></tr></table></figure>

<h3 id="标签与分类"><a href="#标签与分类" class="headerlink" title="标签与分类"></a>标签与分类</h3><p>标签即文章的属性，分类即文章的类别。一篇文字只能属于一个类别，但它可以有多个属性。标签十分灵活，滥用标签将会造成混乱。我们应注意不要使用同义的标签，因为这会大大降低检索和分类的效率。</p>
<p>可以在 Front-Matter 中添加 <code>catergories</code> 和 <code>tags</code> 字段为文章添加标签和分类，如我为本文添加了 <strong>Hexo</strong> 和 <strong>Markdown</strong> 两个标签，并将其归类到了 <strong>技术 / 博客</strong> 类别，对应的 Front-Matter 结构如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title:</span><br><span class="line">tags: </span><br><span class="line">categories:</span><br></pre></td></tr></table></figure>

<h3 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h3><p>类似于HTML的标记语言，具有轻便兼容性好的特点，但各大编辑器对markdown语法的标准有所差异。</p>
<ul>
<li><p>标题：# 一级标题；## 二级标题。</p>
</li>
<li><p>加粗：**加粗文字**</p>
</li>
<li><p>引用：&gt; 引用文字</p>
</li>
<li><p>有序列表：1. list one</p>
</li>
<li><p>无序列表：- list one</p>
</li>
<li><p>待办：-[ ] to do 1；-[x] done</p>
</li>
<li><p>链接：[链接](<a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a>)</p>
</li>
<li><p>图片：![链接](imags.png)</p>
</li>
<li><p>分割线：—</p>
</li>
<li><p>代码：`code`；```code```</p>
</li>
</ul>
<h2 id="Hexo-内置标签"><a href="#Hexo-内置标签" class="headerlink" title="Hexo 内置标签"></a>Hexo 内置标签</h2><h3 id="文本居中标签"><a href="#文本居中标签" class="headerlink" title="文本居中标签"></a>文本居中标签</h3><p>区别于使用html的<code>&lt;center&gt;&lt;/center&gt;</code>标签，centerquote是居中引用，一般在引用单行文本时使用。它的效果如下所示：</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>文本居中</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<p>可以通过以下两种方式使用该标签：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% centerquote %&#125;文本居中&#123;% endcenterquote %&#125;</span><br><span class="line">---</span><br><span class="line">&#123;% cq %&#125;文本居中&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="代码块进阶用法"><a href="#代码块进阶用法" class="headerlink" title="代码块进阶用法"></a>代码块进阶用法</h3><p>可以通过为代码块附加参数的形式为其添加更丰富的信息提示。</p>
<p>代码块进阶语法规则：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[language] [title] [url] [link text]</span><br><span class="line">code snippet</span><br></pre></td></tr></table></figure>
<p>其中，各参数意义如下：</p>
<ul>
<li>langugae：语言名称，引导渲染引擎正确解析并高亮显示关键字</li>
<li>title：代码块标题，将会显示在左上角</li>
<li>url：链接地址，如果没有指定 link text 则会在右上角显示 link</li>
<li>link text：链接名称，指定 url 后有效，将会显示在右上角</li>
</ul>
<p>url 必须为有效链接地址才会以链接的形式显示在右上角，否则将作为标题显示在左上角。以 url 为分界，左侧除了第一个单词会被解析为 language，其他所有单词都会被解析为 title，而右侧的所有单词都会被解析为 link text。如果不想填写 title，可以在 language 和 url 之间添加至少三个空格。</p>
<h3 id="note标签"><a href="#note标签" class="headerlink" title="note标签"></a>note标签</h3><p>Note标签包括<code>default|primary|success|info|warning|danger</code>，语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] %&#125;</span><br><span class="line">文字</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note default">
            <p>default风格</p>
          </div>

<div class="note primary">
            <p>primary风格</p>
          </div>

<div class="note success">
            <p>success风格</p>
          </div>

<div class="note info">
            <p>info风格</p>
          </div>

<div class="note warning">
            <p>warning风格</p>
          </div>

<div class="note danger">
            <p>danger风格</p>
          </div>

<h3 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h3><p>通过 label 标签可以为文字添加背景色，包括<code>default|primary|success|info|warning|danger</code>，默认使用 <code>default</code> 作为缺省。语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% label [class]@文字 %&#125;</span><br></pre></td></tr></table></figure>

<p>使用示例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I heard the echo, &#123;% label default@from the valleys and the heart %&#125;</span><br><span class="line">Open to the lonely soul of &#123;% label info@sickle harvesting %&#125;</span><br><span class="line">Repeat outrightly, but also repeat the well-being of</span><br><span class="line">Eventually &#123;% label warning@swaying in the desert oasis %&#125;</span><br><span class="line">&#123;% label success@I believe %&#125; I am</span><br><span class="line">&#123;% label primary@Born as the bright summer flowers %&#125;</span><br><span class="line">Do not withered undefeated fiery demon rule</span><br><span class="line">Heart rate and breathing to bear &#123;% label danger@the load of the cumbersome %&#125;</span><br><span class="line">Bored</span><br></pre></td></tr></table></figure>

<p>I heard the echo, <span class="label default">from the valleys and the heart</span><br>Open to the lonely soul of <span class="label info">sickle harvesting</span><br>Repeat outrightly, but also repeat the well-being of<br>Eventually <span class="label warning">swaying in the desert oasis</span></p>
<span class="label success">I believe</span> I am
<span class="label primary">Born as the bright summer flowers</span>
<p>Do not withered undefeated fiery demon rule<br>Heart rate and breathing to bear <span class="label danger">the load of the cumbersome</span><br>Bored</p>
<p>可在主题配置文件中设置 <code>label: false</code> 来取消 label 标签默认 CSS 样式。</p>
<h3 id="button按钮"><a href="#button按钮" class="headerlink" title="button按钮"></a>button按钮</h3><p>通过 button 标签可以快速添加带有主题样式的按钮，语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], title %&#125;</span><br></pre></td></tr></table></figure>

<p>也可简写为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn url, text, icon [class], hhh %&#125;</span><br></pre></td></tr></table></figure>

<p>其中， 图标 ID 来源于 <a href="https://fontawesome.com/v4.7.0/icons/" target="_blank" rel="noopener">FontAwesome</a> 。</p>
<p>使用示例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, 文本 %&#125;</span><br><span class="line">&#123;% btn #, 文本&amp;标题,, 标题 %&#125;</span><br><span class="line">&#123;% btn #, 文本&amp;图标, home %&#125;</span><br><span class="line">&#123;% btn #, 文本&amp;大图标 (固定宽度), home fa-fw fa-lg %&#125;</span><br></pre></td></tr></table></figure>

<a class="btn" href="#">
            <i class="fa fa-"></i>文本
          </a>
<a class="btn" href="#" title="标题">
            <i class="fa fa-"></i>文本&标题
          </a>
<a class="btn" href="#">
            <i class="fa fa-home"></i>文本&图标
          </a>
<a class="btn" href="#">
            <i class="fa fa-home fa-fw fa-lg"></i>文本&大图标 (固定宽度)
          </a>

<h3 id="tab标签"><a href="#tab标签" class="headerlink" title="tab标签"></a>tab标签</h3><p>tab 标签用于快速创建 tab 选项卡，语法如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs [Unique name], [index] %&#125;</span><br><span class="line">  &lt;!-- tab [Tab caption]@[icon] --&gt;</span><br><span class="line">  标签页内容（支持行内标签）</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p>其中，各参数意义如下：</p>
<ul>
<li>Unique name: 全局唯一的 Tab 名称，将作为各个标签页的 id 属性前缀</li>
<li>index: 当前激活的标签页索引，如果未定义则默认选中显示第一个标签页，如果设为 - 1 则默认隐藏所有标签页</li>
<li>Tab caption: 当前标签页的标题，如果不指定则会以 Unique name 加上索引作为标题</li>
<li>icon: 在标签页标题中添加 Font awesome 图标</li>
</ul>
<p>使用示例如下：</p>
<div class="tabs" id="tab标签列表"><ul class="nav-tabs"><li class="tab active"><a href="#tab标签列表-1">标签页1</a></li><li class="tab"><a href="#tab标签列表-2">标签页2</a></li><li class="tab"><a href="#tab标签列表-3">标签页3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab标签列表-1"><p>  标签页1文本内容</p></div><div class="tab-pane" id="tab标签列表-2"><p>  标签页2文本内容</p></div><div class="tab-pane" id="tab标签列表-3"><p>  标签页3文本内容</p></div></div></div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Tab标签列表 %&#125;</span><br><span class="line">  &lt;!-- tab 标签页1 --&gt;</span><br><span class="line">    标签页1文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">  &lt;!-- tab 标签页2 --&gt;</span><br><span class="line">    标签页2文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">  &lt;!-- tab 标签页3 --&gt;</span><br><span class="line">    标签页3文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="引用站内链接"><a href="#引用站内链接" class="headerlink" title="引用站内链接"></a>引用站内链接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% post_path slug %&#125;</span><br><span class="line">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>

<p>其中，<code>slug</code> 表示 <code>_post</code> 目录下的 Markdown 文件名。<code>post_path</code> 标签将会渲染为文章的地址，即 <code>permalink</code>；而 <code>post_link</code> 标签将会渲染为链接，可以通过 <code>title</code> 指定链接标题。</p>
<p>如以下标签将会生成 <code>/posts/Hexo写作指南.html</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% post_path Hexo写作指南 %&#125;</span><br></pre></td></tr></table></figure>

<p>而以下标签则会生成链接标题。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% post_link Hexo写作指南 Hexo写作指南 %&#125;</span><br></pre></td></tr></table></figure>


<p>标题</p>


<p>这种站内引用方式比直接使用 url 引用的形式更为可靠，因为即使修改了 <code>permalink</code> 格式，或者修改了文章的路由地址，只要 Markdown 文件名没有发生改变，引用链接都不会失效。</p>
<h3 id="插入Swig代码"><a href="#插入Swig代码" class="headerlink" title="插入Swig代码"></a>插入Swig代码</h3><p>如果需要在页面内插入 Swig 代码，包括原生 HTML 代码，JavaScript 脚本等，可以通过 raw 标签来禁止 Markdown 引擎渲染标签内的内容。语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>

<p>该标签通常用于在页面内引入三方脚本实现特殊功能，尤其是当该三方脚本尚无相关 hexo 插件支持的时候，可以通过写原生 Web 页面的形式引入脚本并编写实现逻辑。</p>
<h3 id="插入Gist"><a href="#插入Gist" class="headerlink" title="插入Gist"></a>插入Gist</h3><p>如果需要在页面内插入 Gist 上的代码片段时，可以使用如下标签:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% gist gist\_id \[filename\] %&#125;</span><br></pre></td></tr></table></figure>

<p>其中，各参数意义如下：</p>
<ul>
<li>gist_id: Gist 仓库页面 url 中最后一段随机字符串</li>
<li>filename: Gist 中的文件名</li>
</ul>
<p>如果 Gist 中只有一个文件，可以不用指定 filename，也可以通过 JavaScript 脚本的形式直接引入，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;Coodool&#x2F;cb4ff46a3523955dd4b918dd775b6774.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>如果 Gist 中有多个文件，可以在标签内输入 filename 来指定只引入某个文件，如果没有指定 filename，将会引入 Gist 中的所有文件。另外，引用 JavaScript 脚本形式无法精确控制只引入某一个文件，将会同时引入 Gist 中的所有文件。</p>
<p>如果指定了与 Gist 无法匹配的 filename，页面上将不会显示任何标签内容。所以，一般在 Gist 只有一个文件的情况下无需指定 filename。</p>
<h2 id="插入多媒体"><a href="#插入多媒体" class="headerlink" title="插入多媒体"></a>插入多媒体</h2><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><h4 id="引用–绝对路径"><a href="#引用–绝对路径" class="headerlink" title="引用–绝对路径"></a>引用–绝对路径</h4><p>将图片统一放在<code>source/images</code>文件夹中，通过markdown语法访问它们。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source&#x2F;images&#x2F;image.jpg</span><br><span class="line"></span><br><span class="line">![(可以写关于图片的描述)](&#x2F;images&#x2F;image.jpg)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p>
</blockquote>
<h4 id="本地引用–相对路径"><a href="#本地引用–相对路径" class="headerlink" title="本地引用–相对路径"></a>本地引用–相对路径</h4><p>图片除了可以放在统一的<code>images</code>文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置<code>_config.yml</code>来生成。搜索<code>post_asset_folder</code>将<code>false</code>改为<code>true</code>，新建文章时就会同时新建一个同名文件夹。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">![](image.jpg)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上述是markdown的引用方式，图片只能在文章中显示，但无法在首页中正常显示。</p>
</blockquote>
<h4 id="图床引用"><a href="#图床引用" class="headerlink" title="图床引用"></a>图床引用</h4><p>在Github上建立一个新仓库来存放图片，利用Picgo来进行上传并生成markdown。同时Picgo还支持七牛云，腾讯云等等。如果使用的是Typora编辑器，它能很好的兼容Picgo，方便的在编辑时插入图片并通过Picgo上传到图床。</p>
<blockquote>
<p>Picgo：<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a><br>教程：<a href="https://picgo.github.io/PicGo-Doc/" target="_blank" rel="noopener">https://picgo.github.io/PicGo-Doc/</a></p>
</blockquote>
<h3 id="插入网易云音乐"><a href="#插入网易云音乐" class="headerlink" title="插入网易云音乐"></a>插入网易云音乐</h3><p>找到要插入的歌曲，点击左侧图片下方的<strong>生成外链播放器</strong>，复制代码直接插入到文档中。某些受版权保护的歌曲无法生成外链。</p>
<p>例子如下，其中的<code>marginwidth</code>控制播放器的宽度，<code>marginheight</code>控制播放器的高度，auto控制是否自动播放，1为自动播放，0为不自动播放，可以自行修改参数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;330 height&#x3D;86 src&#x3D;&quot;&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;1373168742&amp;auto&#x3D;0&amp;height&#x3D;66&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;800 height&#x3D;86 src&#x3D;&quot;&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;1373168742&amp;auto&#x3D;0&amp;height&#x3D;66&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1373168742&auto=0&height=66"></iframe>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=800 height=86 src="//music.163.com/outchain/player?type=2&id=1373168742&auto=0&height=66"></iframe>

<h3 id="插入Youtube"><a href="#插入Youtube" class="headerlink" title="插入Youtube"></a>插入Youtube</h3><p>找到要插入的视频，点击右下角的分享，选择第一个<code>嵌入</code>，复制代码直接插入文档中。可以修改是否显示播放器控件和开始时间。</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/TAMyLwW9HW8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<p>B站同样的，找到分享，选择<code>嵌入代码</code>，再将代码插入文档即可（突然发现b站可以边看视频边做笔记了）。</p>
]]></content>
  </entry>
  <entry>
    <title>NexT主题</title>
    <url>/2020/04/01/NexT%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<blockquote>
<p>Hexo主题官网：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a><br>Hexo主题排行榜：<a href="https://hexo.voxel.site/" target="_blank" rel="noopener">https://hexo.voxel.site/</a></p>
</blockquote>
<h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><blockquote>
<p>NexT官网：<a href="https://theme-next.org/" target="_blank" rel="noopener">https://theme-next.org/</a><br>GitHub：<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></p>
</blockquote>
<a id="more"></a>

<p>右键单击hexo文件夹git bash here，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>

<p>也可去GitHub网站下载压缩包解压。</p>
<h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>首先修改站点的配置文件。打开博客根目录，找到<code>_config.yml</code>文件，用文本编辑器打开，修改搜索<code>theme</code>，修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>再修改主题配置文件。打开<code>blog&gt;themes&gt;next</code>找到主题配置文件<code>_config.yml</code>，用文本编辑器打开，搜索<code>Scheme</code>，下面提供了四种主题样式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>

<p>删除掉要启用的主题样式前面的<code>＃</code>即可，默认是Muse。</p>
<p>修改语言为中文：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">language： zh-CN</span><br></pre></td></tr></table></figure>

<p>设置顶栏的显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || fa fa-home</span><br><span class="line">  about: &#x2F;about&#x2F; || fa fa-user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || fa fa-tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || fa fa-th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || fa fa-archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || fa fa-calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || fa fa-heartbeat</span><br></pre></td></tr></table></figure>

<p>把要显示的栏目前的<code>＃</code>去掉即可。</p>
<p>再博客根目录下打开Git，创建标签文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &#39;tags&#39;</span><br></pre></td></tr></table></figure>

<p>在<code>resource</code>文件下找到<code>tags</code>文件夹，打开<code>index.md</code>，修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2020-04-1 19:57:14</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure>

<p>同理，在新建<code>about</code>、<code>categories</code>文件夹并修改其<code>index.md</code>文件。</p>
<h2 id="更新并上传主题"><a href="#更新并上传主题" class="headerlink" title="更新并上传主题"></a>更新并上传主题</h2><p>依次执行以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>刷新网站就可以看到网站主题更新成功了。</p>
<h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><p>NexT每个月都会发布新版本，可以通过以下命令来快速更新。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd themes&#x2F;next</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>冬天的宣战</title>
    <url>/2020/11/24/%E5%86%AC%E5%A4%A9%E7%9A%84%E5%AE%A3%E6%88%98/</url>
    <content><![CDATA[<p>在经历了昨天气温骤降后，今天再次迎来了一次小幅降温。我感觉这个天气正式向我宣战了。</p>
<a id="more"></a>

<p>一坐在图书馆我的腿就直哆嗦，板凳的凉透过裤子也能感受到，早晨泡的茶还没有挺过一个小时就宣布妥协了。知识好像也变得懒懒散散，怎么也不肯自己进脑子，非得我去书本上一个一个的抠出来才能往脑子里塞，这也导致我废了老大劲花了很多时间但没学到啥东西。就这状态还不如早点回去呢！我刚走到图书馆门口，外面的风就像一直守在外面似的，一露头，就一巴掌把我扇了回去——我还是老实在图书馆多待会吧。</p>
]]></content>
      <categories>
        <category>拾穗者</category>
      </categories>
  </entry>
  <entry>
    <title>NexT主题优化</title>
    <url>/2020/04/01/NexT%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<blockquote>
<p>常见的问题可以去NexT官网查询<br><a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">https://theme-next.iissnan.com/</a><br>参考的文章<br><a href="http://yearito.cn/posts/hexo-advanced-settings.html" target="_blank" rel="noopener">http://yearito.cn/posts/hexo-advanced-settings.html</a><br><a href="http://yearito.cn/posts/hexo-theme-beautify.html" target="_blank" rel="noopener">http://yearito.cn/posts/hexo-theme-beautify.html</a><br><a href="https://io-oi.me/tech/hexo-next-optimization/" target="_blank" rel="noopener">https://io-oi.me/tech/hexo-next-optimization/</a><br><a href="https://guanqr.com/tech/website/hexo-theme-next-customization/" target="_blank" rel="noopener">https://guanqr.com/tech/website/hexo-theme-next-customization/</a></p>
</blockquote>
<h2 id="增加字数统计和阅读计时功能"><a href="#增加字数统计和阅读计时功能" class="headerlink" title="增加字数统计和阅读计时功能"></a>增加字数统计和阅读计时功能</h2><a id="more"></a>

<p>首先安装hexo-symbols-count-time插件，在博客根目录下打开Git，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<p>打开博客根目录下的博客配置文件<code>_config.yml</code>，添加以下代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">symbols: true</span><br><span class="line">time: true</span><br><span class="line">total_symbols: true</span><br><span class="line">total_time: true</span><br><span class="line">exclude_codeblock: false</span><br></pre></td></tr></table></figure>

<blockquote>
<p>exclude_codeblock排除代码块中的内容，默认为false。</p>
</blockquote>
<p>NexT集成了该插件，所以我们修改主题配置，打开next文件夹下的<code>_config.yml</code>文件，修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">separated_meta: true</span><br><span class="line">item_text_post: true</span><br><span class="line">item_text_total: false</span><br><span class="line">awl: 2</span><br><span class="line">wpm: 275</span><br><span class="line">suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>awl为平均字长。</p>
</blockquote>
<blockquote>
<p>wpm为每分钟字数。</p>
</blockquote>
<p>如果字数显示为空白，阅读时长显示NaN，尝试清空缓存，运行以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p>再次部署网站刷新即可。</p>
<h2 id="添加网站运行时间"><a href="#添加网站运行时间" class="headerlink" title="添加网站运行时间"></a>添加网站运行时间</h2><p>修改<code>/blog/themes/next/layout/_partials/footer.swig</code>文件，在末尾加入如下代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;br&#x2F;&gt;</span><br><span class="line">&lt;!-- 网站运行时间的设置 --&gt;</span><br><span class="line">&lt;span id&#x3D;&quot;timeDate&quot;&gt;载入天数...&lt;&#x2F;span&gt;</span><br><span class="line">&lt;span id&#x3D;&quot;times&quot;&gt;载入时分秒...&lt;&#x2F;span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now &#x3D; new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        var grt&#x3D; new Date(&quot;04&#x2F;21&#x2F;2019 15:54:40&quot;);&#x2F;&#x2F;此处修改你的建站时间或者网站上线时间</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24; dnum &#x3D; Math.floor(days);</span><br><span class="line">        hours &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 - (24 * dnum); hnum &#x3D; Math.floor(hours);</span><br><span class="line">        if(String(hnum).length &#x3D;&#x3D;1 )&#123;hnum &#x3D; &quot;0&quot; + hnum;&#125; minutes &#x3D; (now - grt ) &#x2F; 1000 &#x2F;60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum &#x3D; Math.floor(minutes); if(String(mnum).length &#x3D;&#x3D;1 )&#123;mnum &#x3D; &quot;0&quot; + mnum;&#125;</span><br><span class="line">        seconds &#x3D; (now - grt ) &#x2F; 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum &#x3D; Math.round(seconds); if(String(snum).length &#x3D;&#x3D;1 )&#123;snum &#x3D; &quot;0&quot; + snum;&#125;</span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML &#x3D; &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;;</span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML &#x3D; hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="侧边栏社交按钮"><a href="#侧边栏社交按钮" class="headerlink" title="侧边栏社交按钮"></a>侧边栏社交按钮</h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>social</code>，去掉要启用的链接前面的注释，并将链接设置为自己的链接。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Social links</span><br><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;your-user-name</span><br><span class="line">  Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;your-user-name</span><br><span class="line">  微博: http:&#x2F;&#x2F;weibo.com&#x2F;your-user-name</span><br><span class="line">  豆瓣: http:&#x2F;&#x2F;douban.com&#x2F;people&#x2F;your-user-name</span><br><span class="line">  知乎: http:&#x2F;&#x2F;www.zhihu.com&#x2F;people&#x2F;your-user-name</span><br></pre></td></tr></table></figure>

<p>下方的<code>social_icons</code>对于相应的图标（大小写严格匹配），<code>enable</code>控制是否显示图标。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  # Icon Mappings</span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  微博: weibo</span><br></pre></td></tr></table></figure>

<h2 id="首页文章折叠"><a href="#首页文章折叠" class="headerlink" title="首页文章折叠"></a>首页文章折叠</h2><ol>
<li>在文章要要隐藏的内容后面添加<code>&lt;!-- more --&gt;</code>手动进行截断，这样在首页就只会显示<code>&lt;!-- more --&gt;</code>之前的内容<strong>（推荐）</strong>。</li>
<li>在文章的头部添加一个<code>description</code>，<code>description</code>后面描述的内容就是显示的内容。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 主题美化</span><br><span class="line">date: 2020-04-2 21:07:16</span><br><span class="line">description: 描述内容</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h2 id="首页及归档显示的文章篇数"><a href="#首页及归档显示的文章篇数" class="headerlink" title="首页及归档显示的文章篇数"></a><strong>首页及归档显示的文章篇数</strong></h2><p>打开站点配置文件<code>_config.yml</code>，搜索<code>index_generator</code>，将下面的<code>per_page</code>字段修改为自己想要的数字即可，默认为10。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">  path: &#39;&#39;</span><br><span class="line">  per_page: 6</span><br><span class="line">  order_by: -date</span><br></pre></td></tr></table></figure>

<p>归档页面的文章篇数通过修改<code># Pagination</code>字段下的<code>per_page</code>控制，默认为10。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 15</span><br><span class="line">pagination_dir: page</span><br></pre></td></tr></table></figure>

<h2 id="更改侧栏"><a href="#更改侧栏" class="headerlink" title="更改侧栏"></a>更改侧栏</h2><h3 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改主题配置文件中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p>
<ol>
<li><p>设置侧栏的位置，修改<code>sidebar.position</code>的值，支持的选项有：</p>
<ul>
<li>left - 靠左放置</li>
<li>right - 靠右放置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">   positon: left</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置侧栏显示的时机，修改<code>sidebar.display</code>的值，支持的选项有：</p>
<ul>
<li><p><code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</p>
</li>
<li><p><code>always</code> - 在所有页面中都显示</p>
</li>
<li><p><code>hide</code> - 在所有页面中都隐藏（可以手动展开）</p>
</li>
<li><p><code>remove</code> - 完全移除</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  display: post</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>打开主题配置文件， 修改字段 <code>avatar</code>， 值设置成头像的链接地址。链接地址可以是完整的网络链接，配置成以下格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatar: http:&#x2F;&#x2F;example.com&#x2F;avatar.gif</span><br></pre></td></tr></table></figure>

<p>如果是本地的地址，则将头像文件命名为avatar.gif，放在next文件夹下的<code>source/images/</code> 目录下或者<code>source/uploads/</code> 下（ uploads 目录若不存在就新建）。两种方法的配置如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatar: &#x2F;images&#x2F;avatar.png</span><br><span class="line">avatar: &#x2F;uploads&#x2F;avatar.png</span><br></pre></td></tr></table></figure>

<h3 id="作者昵称"><a href="#作者昵称" class="headerlink" title="作者昵称"></a>作者昵称</h3><p>打开站点配置文件，设置<code>author</code>为你的昵称。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">author： elieye</span><br></pre></td></tr></table></figure>

<h3 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h3><p>打开站点配置文件， 设置 <code>description</code> 字段为你的站点描述。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">description: &#39;漫漫长路，半程风雨，半程春&#39;</span><br></pre></td></tr></table></figure>

<h2 id="文章底部标签图标"><a href="#文章底部标签图标" class="headerlink" title="文章底部标签图标"></a><strong>文章底部标签图标</strong></h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>tag_icon</code>，将<code>false</code>改为<code>true</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag_icon: true</span><br></pre></td></tr></table></figure>

<h2 id="隐藏底部由Hexo驱动"><a href="#隐藏底部由Hexo驱动" class="headerlink" title="隐藏底部由Hexo驱动"></a>隐藏底部由Hexo驱动</h2><p>打开<code>themes/next/layout/_partials/footer.swig</code>隐藏之间的代码即可，或者直接删除。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">&#123;%- if theme.footer.powered %&#125;</span><br><span class="line">  &lt;div class&#x3D;&quot;powered-by&quot;&gt;</span><br><span class="line">    &#123;%- set next_site &#x3D; &#39;https:&#x2F;&#x2F;theme-next.org&#39; %&#125;</span><br><span class="line">    &#123;%- if theme.scheme !&#x3D;&#x3D; &#39;Gemini&#39; %&#125;</span><br><span class="line">      &#123;%- set next_site &#x3D; &#39;https:&#x2F;&#x2F;&#39; + theme.scheme | lower + &#39;.theme-next.org&#39; %&#125;</span><br><span class="line">    &#123;%- endif %&#125;</span><br><span class="line">    &#123;&#123;- __(&#39;footer.powered&#39;, next_url(&#39;https:&#x2F;&#x2F;hexo.io&#39;, &#39;Hexo&#39;, &#123;class: &#39;theme-link&#39;&#125;) + &#39; &amp; &#39; + next_url(next_site, &#39;NexT.&#39; + theme.scheme, &#123;class: &#39;theme-link&#39;&#125;)) &#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%- if theme.add_this_id %&#125;</span><br><span class="line">  &lt;div class&#x3D;&quot;addthis_inline_share_toolbox&quot;&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;&#x2F;&#x2F;s7.addthis.com&#x2F;js&#x2F;300&#x2F;addthis_widget.js#pubid&#x3D;&#123;&#123; theme.add_this_id &#125;&#125;&quot; async&#x3D;&quot;async&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>

<p>如果同时设置了底部显示网站运行时间，需要删除底部时间的显示代码的换行<code>&lt;br/&gt;</code>，不然会有一行空白行。</p>
<h2 id="夜间模式"><a href="#夜间模式" class="headerlink" title="夜间模式"></a>夜间模式</h2><p>打开主题配置文件，搜索<code>\# Dark Mode</code>，将下面的<code>false</code>字段改为<code>auto</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Dark Mode</span><br><span class="line">darkmode: auto</span><br></pre></td></tr></table></figure>

<p>网站将根据系统是否开启暗色主题选择开启夜间模式，缺点就是不能自己手动打开。Win10的黑暗模式需要通过创建任务来自动开启，详细方法见<a href="https://sspai.com/post/57593。" target="_blank" rel="noopener">https://sspai.com/post/57593。</a></p>
<h2 id="博客模板"><a href="#博客模板" class="headerlink" title="博客模板"></a>博客模板</h2><p>打开博客根文件夹<code>/scaffolds/post.md</code></p>
<h2 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>font</code>，将下面的<code>enable</code>字段改为<code>true</code>，在<code>host</code>字段填入你想要更换的外链字体。下方的<code>global</code>控制全局字体，<code>headings</code>控制标题字体，<code>posts</code>控制正文字体，<code>logo</code>控制logo字体，<code>codes</code>控制代码字体，<code>size</code>字段的单位为em。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line">  </span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lato</span><br><span class="line">    size: 0.8</span><br></pre></td></tr></table></figure>

<h2 id="取消目录自动编号"><a href="#取消目录自动编号" class="headerlink" title="取消目录自动编号"></a>取消目录自动编号</h2><p>在主题配置文件中搜索</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\# Automatically add list number to toc.</span><br></pre></td></tr></table></figure>

<p>将下面的<code>number: ture</code>改为false。</p>
<h2 id="显示阅读进度"><a href="#显示阅读进度" class="headerlink" title="显示阅读进度"></a>显示阅读进度</h2><p>侧边栏阅读进度：打开 主题配置文件<code>_config.yml</code>，搜索 <code>scrollpercent</code>，把 <code>false</code> 改为 <code>true</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Scroll percent label in b2t button</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure>

<p>顶栏阅读进度（二者可共存）：打开主题配置文件<code>_config.yml</code>搜索reading_progress，把<code>false</code>修改为<code>true</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reading_progress:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h2 id="鼠标点击爱心"><a href="#鼠标点击爱心" class="headerlink" title="鼠标点击爱心"></a>鼠标点击爱心</h2><p>打开<code>next&gt;source&gt;js</code>文件夹，在里面新建一个src文件夹（有就打开它），新建<code>clicklove.js</code>文件，将以下代码复制至里面。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e&#x3D;0;e&lt;d.length;e++)d[e].alpha&lt;&#x3D;0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+&#x3D;.004,d[e].alpha-&#x3D;.013,d[e].el.style.cssText&#x3D;&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof e.onclick&amp;&amp;e.onclick;e.onclick&#x3D;function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a&#x3D;t.createElement(&quot;div&quot;);a.className&#x3D;&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a&#x3D;t.createElement(&quot;style&quot;);a.type&#x3D;&quot;text&#x2F;css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText&#x3D;e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d&#x3D;[];e.requestAnimationFrame&#x3D;function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3&#x2F;60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>

<p>然后打开<code>themes&gt;next&gt;layout&gt;_layout.swig</code>文件，在末尾添加以下代码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;clicklove.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="鼠标点击爆炸效果"><a href="#鼠标点击爆炸效果" class="headerlink" title="鼠标点击爆炸效果"></a>鼠标点击爆炸效果</h2><p>打开<code>next&gt;source&gt;js</code>文件夹，在里面新建一个src文件夹（有就打开它），新建<code>fireworks.js</code>文件，将以下代码复制至里面。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;use strict&quot;;function updateCoords(e)&#123;pointerX&#x3D;(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY&#x3D;e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t&#x3D;anime.random(0,360)*Math.PI&#x2F;180,a&#x3D;anime.random(50,180),n&#x3D;[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a&#x3D;&#123;&#125;;return a.x&#x3D;e,a.y&#x3D;t,a.color&#x3D;colors[anime.random(0,colors.length-1)],a.radius&#x3D;anime.random(16,32),a.endPos&#x3D;setParticuleDirection(a),a.draw&#x3D;function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle&#x3D;a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a&#x3D;&#123;&#125;;return a.x&#x3D;e,a.y&#x3D;t,a.color&#x3D;&quot;#F00&quot;,a.radius&#x3D;0.1,a.alpha&#x3D;0.5,a.lineWidth&#x3D;6,a.draw&#x3D;function()&#123;ctx.globalAlpha&#x3D;a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth&#x3D;a.lineWidth,ctx.strokeStyle&#x3D;a.color,ctx.stroke(),ctx.globalAlpha&#x3D;1&#125;,a&#125;function renderParticule(e)&#123;for(var t&#x3D;0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a&#x3D;createCircle(e,t),n&#x3D;[],i&#x3D;0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n&#x3D;this,i&#x3D;arguments;clearTimeout(a),a&#x3D;setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl&#x3D;document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx&#x3D;canvasEl.getContext(&quot;2d&quot;),numberOfParticules&#x3D;30,pointerX&#x3D;0,pointerY&#x3D;0,tap&#x3D;&quot;mousedown&quot;,colors&#x3D;[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize&#x3D;debounce(function()&#123;canvasEl.width&#x3D;2*window.innerWidth,canvasEl.height&#x3D;2*window.innerHeight,canvasEl.style.width&#x3D;window.innerWidth+&quot;px&quot;,canvasEl.style.height&#x3D;window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render&#x3D;anime(&#123;duration:1&#x2F;0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!&#x3D;&#x3D;e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!&#x3D;&#x3D;e.target.id&amp;&amp;&quot;A&quot;!&#x3D;&#x3D;e.target.nodeName&amp;&amp;&quot;IMG&quot;!&#x3D;&#x3D;e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;&quot;use strict&quot;;function updateCoords(e)&#123;pointerX&#x3D;(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY&#x3D;e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t&#x3D;anime.random(0,360)*Math.PI&#x2F;180,a&#x3D;anime.random(50,180),n&#x3D;[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a&#x3D;&#123;&#125;;return a.x&#x3D;e,a.y&#x3D;t,a.color&#x3D;colors[anime.random(0,colors.length-1)],a.radius&#x3D;anime.random(16,32),a.endPos&#x3D;setParticuleDirection(a),a.draw&#x3D;function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle&#x3D;a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a&#x3D;&#123;&#125;;return a.x&#x3D;e,a.y&#x3D;t,a.color&#x3D;&quot;#F00&quot;,a.radius&#x3D;0.1,a.alpha&#x3D;0.5,a.lineWidth&#x3D;6,a.draw&#x3D;function()&#123;ctx.globalAlpha&#x3D;a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth&#x3D;a.lineWidth,ctx.strokeStyle&#x3D;a.color,ctx.stroke(),ctx.globalAlpha&#x3D;1&#125;,a&#125;function renderParticule(e)&#123;for(var t&#x3D;0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a&#x3D;createCircle(e,t),n&#x3D;[],i&#x3D;0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n&#x3D;this,i&#x3D;arguments;clearTimeout(a),a&#x3D;setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl&#x3D;document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx&#x3D;canvasEl.getContext(&quot;2d&quot;),numberOfParticules&#x3D;30,pointerX&#x3D;0,pointerY&#x3D;0,tap&#x3D;&quot;mousedown&quot;,colors&#x3D;[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize&#x3D;debounce(function()&#123;canvasEl.width&#x3D;2*window.innerWidth,canvasEl.height&#x3D;2*window.innerHeight,canvasEl.style.width&#x3D;window.innerWidth+&quot;px&quot;,canvasEl.style.height&#x3D;window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render&#x3D;anime(&#123;duration:1&#x2F;0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!&#x3D;&#x3D;e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!&#x3D;&#x3D;e.target.id&amp;&amp;&quot;A&quot;!&#x3D;&#x3D;e.target.nodeName&amp;&amp;&quot;IMG&quot;!&#x3D;&#x3D;e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;;</span><br></pre></td></tr></table></figure>

<p>然后打开<code>themes/next/layout/_layout.swig</code>,在<code>&lt;/body&gt;</code>上面写下如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas class&#x3D;&quot;fireworks&quot; style&#x3D;&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;&#x2F;canvas&gt; </span><br><span class="line">   &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;animejs&#x2F;2.2.0&#x2F;anime.min.js&quot;&gt;&lt;&#x2F;script&gt; </span><br><span class="line">   &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;fireworks.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>打开主题配置文件，在里面最后写下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Fireworks</span><br><span class="line">fireworks: true</span><br></pre></td></tr></table></figure>

<p>刷新页面即可。</p>
<h2 id="文章阅读次数"><a href="#文章阅读次数" class="headerlink" title="文章阅读次数"></a>文章阅读次数</h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>busuanzi</code>，将<code>false</code>改为<code>true</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h2 id="代码块复制功能"><a href="#代码块复制功能" class="headerlink" title="代码块复制功能"></a>代码块复制功能</h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>copy_button</code>，将<code>false</code>改为<code>true</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">copy_button:</span><br><span class="line">   enable: true</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>《思维导图完整手册》</title>
    <url>/2020/09/08/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E5%AE%8C%E6%95%B4%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>要交给人们一种新的思维方式，就不要刻意地教他们，而应该教给他们一种工具，通过工具培养新的思维方式。</p>

            <i class="fa fa-quote-right"></i>
          </blockquote><a id="more"></a>

<p>有时候我不禁思考，是否传统的书籍编排方式已经过时了呢？最近流行起来的RR双向链接与ZK笔记法让我看到了在笔记领域的一股不同的潮流，也让我更加意识到思维的过程不是线性的，但是获取知识的方式和笔记的方式却是线性的，这是否不利于我们的思考和创作呢？知识的线性编排自有其优点，它拥有精密的逻辑性和连贯性，对于建立知识的框架和理清脉络十分有利，但我们在笔记的过程中应该将一维的知识过程，立体起来。简单的串联不利于我们管理与引用，采用RR笔记法可以在笔记间互相跳转，构建学科知识体系。思维导图也是一种方便我们进行思考和链接知识的工具，它的每一个分支都可以进行下分，同时可以在分支间建立联系方便跳转。二者其实是擅长的不同的领域。对于要构筑庞大的学科知识，并且要细化到每一个知识点，RR双链结合ZK可以很好的胜任。对于一个小概念，我们想要发散和记忆，思维导图就更擅长。合理的利用思维导图来进行思考和笔记，现在网络上有丰富的软件可以供给我们选择，简化我们的制作过程，降低修改的成本，所以，不要在用传统的笔记来阻碍我们思考的过程，采用适合的工具做它擅长的事。</p>
]]></content>
      <categories>
        <category>拾穗</category>
      </categories>
  </entry>
  <entry>
    <title>《写给大家看的设计书》</title>
    <url>/2020/09/08/%E5%86%99%E7%BB%99%E5%A4%A7%E5%AE%B6%E7%9C%8B%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B9%A6/</url>
    <content><![CDATA[<hr>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>一旦能够说出什么东西的名字，就会很容易注意到它。你就会掌握它，拥有它，让它受你所控。</p>

            <i class="fa fa-quote-right"></i>
          </blockquote><a id="more"></a>

<p>很多时候我们说不出一副作品好在哪，或者说差在哪，是因为我们不知道从哪些方面去考虑。如果我们知道从哪些角度来看待问题，那么我们就能逐渐掌握它。Robin引出了四大基本原则来帮助我们思考问题。</p>
<ul>
<li><strong>亲密性</strong>：如果某些元素存在某种关系，那么在视觉上也应该有关联（物理的接近就意味着存在关联）。</li>
<li><strong>对齐</strong>：每个元素都应当与页面上的另一个元素有某种视觉联系。</li>
<li><strong>重复</strong>：增加我们作品的条理性和统一性。</li>
<li><strong>对比</strong>：如果两个元素应该相同，那么就让他们截然不同。相似只会造成冲突。</li>
</ul>
<h2 id="亲密性"><a href="#亲密性" class="headerlink" title="亲密性"></a>亲密性</h2><blockquote>
<p>将一些有关联的项移动在一起，这样相关的项就会被视为一个整体。</p>
</blockquote>
<p>有些时候将有关系的元素放在一起不仅会让读者在读起来有逻辑性，还能给读者一种有始有终的感觉，让页面的布置更有组织性。在考虑如何将元素联系在一起时要控制距离的度。相关的项距离足够小，而在不同的部分之间增加合适的空间，让信息的表达更加直观。在我们进行阅读的时候，我们眼睛移动的路径：从哪里开始看，看到哪里算结束，应该是一个合理的过程。优秀的设计师应该引导读者更高效的获取我们要表达的信息。</p>
<p>在运用亲密性原则时，我们可以尝试眯着眼睛，数一数在浏览页面时我们的眼睛停顿了几次，它们之间是否有关系，可以将它们归为一类使之成为一组视觉单元。同时我们要避免以下问题：</p>
<ul>
<li>一个页面上有太多孤立的元素。</li>
<li>不属于同一个子集的元素间留出了同样大小的空白。</li>
<li>标题、子标题、图表标题、图片是否应分类至视觉单元。</li>
<li>不同属一组的元素之间不要建立关系。</li>
<li>不要仅仅因为有空白就把元素放在中间或角落。</li>
</ul>
<h2 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h2><blockquote>
<p>任何元素都不能在页面上随意安放。每一项都应当与页面上的某个内容存在某种视觉联系。</p>
</blockquote>
<p>页面上所有的元素都应该遵循某种对齐原则，尽管我们可能利用亲密性原则将一些元素分开，但是利用对齐原则就会在各元素间建立某种线将它们联系起来，表现出一种有序性。在欣赏作品的时候养成划线的习惯可以帮助我们找到元素的对齐。常见的对齐有左对齐、右对齐和居中对齐。</p>
<p>不管是左对齐或者右对齐，就算对齐的元素之间有足够的距离，但是对齐的边界就像一条线一样将元素联系在一起。两侧对齐不一定要是虚拟的线，我们可以用文字来创造一条线，或者用图片创造一条线，文字则对齐图片的边缘。注意绝对不要在左对齐的正文或缩进的文本上方将标题居中。如果文本没有明确的左边界和右边界，就无法区分标题是否确实居中，看起来它只是悬挂着而已。这样一来，没有对齐的部分就造成页面非常杂乱：缩进很大，文本的右边界呈锯齿状参差不齐，居中的标题左右两边都有空白，另外插图也居中。</p>
<p>居中对齐是最稳妥的方式，它庄重高雅但是也缺乏活力死板，而且它没有一条明确的线来表达对齐的元素之间的关系，两侧凹凸不平的边界弱化了对齐线的强度，所以不建议使用居中对齐，除非你明确像表现出一种端庄的感觉。在运用居中对齐时我们可以运用一些技巧来让我们的设计不那么刻板。</p>
<ul>
<li>同时包含居中文本的块不要居中对齐。</li>
<li>采用可爱的字体。</li>
<li>设置较大的行距，较小的字体，文字周围没有边框。</li>
</ul>
<p>不管是使用那种对齐方式，我们都应该做到只使用一种对齐方式。如果在你的作品中出现了几种对齐方式，那么一定要让它们有联系。比如右对齐的边界线是左对齐的边界线，居中对齐的右边缘是左对齐的边界限等等。总之页面上的元素一定要与其他元素之间存在某种对齐。</p>
<p>新手在设计时往往天马行空，放任自己去摆放元素，并美名其曰打破规则，但最后效果往往不好。<strong>创立规则就是用来打破的，但是打破规则的前提是你必须清楚规则是什么</strong>。你的设计的混乱是有意为之还是无意之举往往更容易就能够看出来。</p>
<h2 id="重复"><a href="#重复" class="headerlink" title="重复"></a>重复</h2><blockquote>
<p>设计的某些方面需要在整个作品中重复。</p>
</blockquote>
<p>我们在设计时经常用到重复的字体大小，粗细，图标等等，重复能够增加我们作品的一致性。如果我们在不同的作品中使用重复的元素往往会产生意想不到的效果。怎么利用重复原则为我们的作品服务呢？如果我们在一张传单的标题处使用了红色加粗字体，在结尾处同样使用红色加粗字体，读者在看到最后时往往会有一种首尾呼应的感觉，连接了整个设计。</p>
<p>可以重复的元素多种多样，可以是字体、项目符号、缩进、对齐、留白、剪贴画等等。使用重复原则时，有时可以把一个元素从现在的设计中抽取出来，并根据这个元素创建一个新设计。或者只使用我们熟知元素的一部分给予暗示。</p>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><blockquote>
<p>页面上的不同元素之间要有对比效果，达到吸引读者的对比效果。</p>
</blockquote>
<p>Robin指出，<strong>要想实现有效的对比，对比就必须强烈</strong>。如果两个元素虽然不同，但是区别不大，这时候就不是对比了，而是冲突。新闻简报中又高又窄的列和水平方向有一些突出的标题，黑色背景和白色字体等等都形成了强烈的对比。对比的根本目的有两个。一个目的是增强页面的效果，另一个目的是有助于信息的组织。对比元素不能让读者混淆，也不能错误地强调重点。</p>
<h2 id="色彩"><a href="#色彩" class="headerlink" title="色彩"></a>色彩</h2><p>常见的色彩模式有CMYK、RGB和Lab三种模式，Lab的色域最广，RGB运用最广，CMYK常用于印刷。</p>
<p>色轮的基础是红绿蓝三原色，将两两相邻的颜色混合就得到了<strong>三间色</strong>。色轮上相对的颜色称为<strong>互补色</strong>，搭配方法常常是一种作为主色，一种作为强调色。彼此等距的三种颜色通常会形成一个让人愉悦的<strong>三色组</strong>。红色、黄色和蓝色是基色三色组。从色轮的一边选择一种颜色，再在色轮上找出它对面的互补色，不过并不直接使用这个互补色，而是使用该互补色两侧的颜色叫做<strong>分裂互补三色组</strong>。配色时使用彼此相邻的颜色称为<strong>类似色</strong>。</p>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>字体设计是一门很深的学问，单独出一本书也不一定能说透彻，在平面设计中字体是非常重要的一环。当然，Robin也花了相当大的篇幅来阐述字体的原则。</p>
<p>标点符号后需要跟一个空格。早在打字机时代，所有的字体都是等宽字体，而且每个标点符号后面都是两个空格（英文）。人们为了强调标题或者重要的内容常常将英文全大写。这并不是一个好的选择。因为我们辨识一个单词往往还需要根据它们的形状。英文的上半部分被称为海岸线，是我们辨识的重要依据。当我们把英文全大写了，它们就都是一个个矩形了。而且全大写的字号较比与同字号的小写看起来更小了。就是说如果我们像通过大写字母增大字号来突出重点的话，大可不必了。</p>
<p>不要使用下划线。在字母下面加上下划线并不美观，而且会分割长英文字母。在汉字里会稍微没有那么突兀。下划线最初是打字员为了要告诉正在给这本书排字的工人哪些字需要印成斜体而留下的信号。</p>
<p>段落缩进的距离不在是固定的，而是1em的距离，em根据字体大小决定。同时标题下面的首段可以不用缩进，大家都知道那是一个新的段落。</p>
<p>字体设计的三个原则</p>
<ol>
<li>协调。如果只使用一种字体，页面上的所有元素都采用同样性质的字体，这种设计就是协调的。你可能标题会加粗，重点的地方会用斜体，但这基本是协调的。</li>
<li>冲突。如果在同一个页面上设置了两个或多个类似的字体，它们并非完全不同，但也不完全相同，这个设计就是冲突的。</li>
<li>对比。冲突是必须要避免的，而对比则是我们要表现的。对比可以是字体大小，粗细，结构，形状，方向，颜色等方面的对比。比如衬线体和无衬线体，全大写和全小写，罗马体和斜体等等都是明显的对比。可以找字体方面的专业书籍来系统地学习字体与字体的搭配。</li>
</ol>
]]></content>
      <categories>
        <category>拾穗</category>
      </categories>
  </entry>
  <entry>
    <title>《断舍离》</title>
    <url>/2020/09/03/%E6%96%AD%E8%88%8D%E7%A6%BB/</url>
    <content><![CDATA[<p>断离舍是一种简单而自然的行为，精炼的总结它的核心观点就在于一个字——出。出是一种自然而然地状态，有进则有出，自然法则造就的一种生态平衡。我们用一个中性不含情感色彩的词去表达断舍离<a id="more"></a>的意境，拂去了我们故以为的断舍离为一种壮士断腕的悲壮情绪，减少了我们对断离舍的仪式感，它本就是我们日常生活中应该做的事情之一，这也体现了断离舍自身的境界。生活中只进不出只会让我们的居住环境变得混乱不堪，并且形成恶性循环，生活也因此变得一团糟，所以我们提倡“出”的哲学。</p>
<p>如果面对一个物质时，我们不是从这个东西需不需要的角度来思考，而是下意识从这个东西能不能用的角度——以物质资料为基准轴的观点来进行取舍和判断，我们就进入了“物质轴”的观点，我们的立场处在了外物的角度，忽略自己的实际需求。</p>
<p>经济学上有个“巴莱多定律”，它指的是“公司80%销售额是由20%的员工创造的”“80%的成果是在所花全部时间的20%中产生的”等这些现象，又简称8/2定律。同样的，屋子里不用的物品占用了80%的空间，经常使用的只占了20%的空间。翻一翻家里的柜子，书桌的角落，看看是不是有很多物品都积了灰了？它们长时间摆放在那里，一直无人问津，却占据着有限的空间。“未来可能有用吧”。我们这么想到，但事实是过了很久，它仍然没有被利用起来，直到有一天屋子里实在堆不下了，我们才极不情愿的将它丢弃。</p>
<p>我们当然需要为未来做积累，贮备好以后需要的物质财富和精神财富，但是更应该判断我们的积累是否有价值，许多时候都是做无用功而已。可能因为某一次商品促销，我们购入了大量的纸巾，将它们囤积在杂货间里。我们在网络上阅读到了一篇文章，把它剪贴下来，保存在我们的笔记里。就这样，我们的杂货间塞得满满当当，我们的笔记本杂乱不堪。一味的收集并不是一个好的习惯，只进不出就犹如一滩死水般毫无活力。日用百货够用就好，购买时也很方便，并且这些物品也是需要经常更替的；收藏的知识要有反复阅读的价值，如果是网络上随手一搜就能够找到了的没有收集的意义。况且无论是什么东西，总是具有一定的时效性。如非具有收藏价值的物品，存放过久总是会造成一定的贬值。需要点明的是，我们是生活在当下的人，能够改善当下的生活，提高当下幸福感的物品才最具价值。</p>
<p>对于不同的空间，物品有不同的收纳方法。例如「三分法」「7·5·1法」「1 out 1 in」「one touch」「自立·自由·自在」等，但我们这里不具体探讨某种方法，因为断舍离不仅仅是舍去一些物品，更深层次的是放空我们的思想上的包袱。我们通过处理掉无用的物品，释放出多余的空间来为生活减轻负担，为重复呆板的生活增加一丝新意。同样的，释放我们思想上的空间也为自己也换一换血。对于无形的“空间”，我们看不见摸不着，所以更需要谨慎处理。倘若我们要维持好友之间亲密关系，这个“空间”的把控就需要恰到好处。如果两个人无时无刻都腻在一起，对对方的所有都了如指掌，这种亲密关系就会逐渐走向死亡。一方面缺乏了新鲜感来让关系活跃起来，没有了神秘感就会对对方失去好奇心，慢慢的趋于平淡。另一方面斗争产生于同一性中，两个人太过于相似了，以至于只要有一方想要打破这个囹圄，挣脱这个桎梏就会受到对方的强烈打压，或者某一方突然表现得过于优秀就会让二者对立起来。所以我们强调要“若即若离”，在两人之间维持一定的空间，为两人之间的关系可以更进一步提供了基础，也为两人可以在某些时候都退一步却又不至于形同陌路。</p>
<p>生活中处处都需要断舍离，当断必断才能日后不受其乱。践行断舍离需要融入到我们的习惯中，当我们能够像呼吸一样无意识地进行断舍离，那么我们也就不需要在进行断舍离了。</p>
]]></content>
      <categories>
        <category>拾穗</category>
      </categories>
  </entry>
  <entry>
    <title>博客搭建</title>
    <url>/2020/04/01/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="在GitHub上创建个人仓库"><a href="#在GitHub上创建个人仓库" class="headerlink" title="在GitHub上创建个人仓库"></a>在GitHub上创建个人仓库</h2><blockquote>
<p>GitHub官网：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p>
</blockquote>
<p>单击右上角的＋号，选择<code>New repository</code>，在<code>Repository name</code>一栏填入</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yourname.github.io</span><br></pre></td></tr></table></figure>

<p>yourname为你的GitHub用户名，例如<code>elieye.github.io</code>。</p>
<p>勾选下方的<code>Initialize this repository with a README</code>栏。</p>
<p>然后单击下方绿色按钮<code>Create repository</code>即创建成功。</p>
<p>在浏览器地址栏输入<code>yourname.github.io</code>即可跳转至你的网站。</p>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><blockquote>
<p>node.js官网：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a></p>
</blockquote>
<p>安装完成后打开<code>powershell</code>（shift+鼠标右键），输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v </span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>显示版本号即安装成功。</p>
<h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><blockquote>
<p>Git官网：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p>
</blockquote>
<blockquote>
<p>Git官网：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p>
</blockquote>
<p>安装完成后打开<code>powershell</code>（shift+鼠标右键），输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p>显示版本号即安装成功。</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>在D盘新建一个文件夹，命名为<code>blog</code>，用来存放博客的文章、配置文件等等。</p>
<p>右键单击<code>blog</code>文件夹选择<code>Git Bash Here</code>，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br></pre></td></tr></table></figure>

<p>安装完毕后检验是否安装成功，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<p>接着初始化博客网站，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>安装必需的组件，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>至此本地网站已经配置完毕，下面生成静态网页，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p>打开本地服务器，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>打开浏览器地址栏输入<code>localhost:4000</code>如果显示了我们的网站即配置成功，<code>ctrl+c</code>退出。</p>
<h2 id="将Git与GitHub进行绑定"><a href="#将Git与GitHub进行绑定" class="headerlink" title="将Git与GitHub进行绑定"></a>将Git与GitHub进行绑定</h2><p>鼠标右键选择<code>Git Bash Here</code>,输入你的GitHub用户名和邮箱</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;yourmail@gmail.com&quot;</span><br></pre></td></tr></table></figure>

<p>生成ssh文件，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;yourmail@gmail.com&quot;</span><br></pre></td></tr></table></figure>

<p>复制ssh文件的内容，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>将输出的内容复制到剪切板，打开<code>GitHub-&gt;settings-&gt;SSH and GPG keys</code>，选择<code>New SSH key</code>，新建一个ssh，Title栏输入ssh，Key栏填入刚才复制的内容。</p>
<p>检测GitHub公钥设置是否成功，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>如果显示你的用户名即成功</p>
<p>使用文本编辑器（vs、sublime等）打开blog文件夹下的<code>_config.yml</code>文件（它是博客的配置文件区别于<code>themes</code>文件夹下的<code>_config.yml</code>，它是主题配置文件），找到文件的最后修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;yourname&#x2F;yourname.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>在<code>blog</code>文件夹右键单击选择<code>Git Bash Here</code>，安装扩展，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>创建一篇文章，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new post &quot;article title&quot;</span><br></pre></td></tr></table></figure>

<p>打开<code>blog\source\_posts</code>文件夹，里面应该会有一个md文件，它就是我们的文章。再创建一个images文件夹用来存放md里面的图片</p>
<p>下面将我们写好的文字上传至GitHub，依次输入以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hexo g 即 hexo generate 生成；hexo s 即 hexo server 启动服务预览；hexo d 即 hexo deploy 部署</p>
</blockquote>
<p>刷新网站，能看到文章就说明成功了。</p>
]]></content>
  </entry>
  <entry>
    <title>雨落湖心心亦摇</title>
    <url>/2020/09/22/%E9%9B%A8%E8%90%BD%E6%B9%96%E5%BF%83%E5%BF%83%E4%BA%A6%E6%91%87/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>梦幻的少女在白色的连衣裙的腰带上挂着萤笼，攀登着银杏树林立的坡道，去探望病中的恋人，梦幻的雨打在梦幻的少女身上。</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<a id="more"></a>

<p>今早一起床就是暴雨，我斜靠在床边，呆滞地望着窗外，雨水正打在正对的窗户外的树叶上啪啪作响。</p>
<p>想着外面的土地也因为雨水变得泥泞，我就更加不愿起床了。</p>
<p>屋里凉飕飕的，昨晚空调的凉气还没有消散。我裹了裹身上的被子，又猛地一下掀开，强迫自己下床洗漱。</p>
<p>被子里的余温开始下降了。</p>
<p>昨天的一切也开始消散了。</p>
<p>——昨天舞动的手指和跳跃的字符被忘记，弥漫在身体里的残留也无影无踪。</p>
<p>——昨天躁动的、不断碰撞、充斥着大脑的、就快要溢出来了的情感就像没发生过一样。</p>
<p>我希望它是雪地里的雪狐等待我去寻找，但它却是雪地里的雪花已经了无踪迹。</p>
<p>被压抑的正在逐步失去活性。</p>
<p>过往的尝试都是无疾而终，这次也不例外。</p>
<p>我坐在教室里，又回到了熟悉的生活。</p>
<p>全部都刚刚好，上课也没有迟到。</p>
]]></content>
      <categories>
        <category>拾穗者</category>
      </categories>
  </entry>
  <entry>
    <title>风中白兰地</title>
    <url>/2020/10/13/%E9%A3%8E%E4%B8%AD%E7%99%BD%E5%85%B0%E5%9C%B0/</url>
    <content><![CDATA[<p>下午到医院的时候已经是两点过了。</p>
<a id="more"></a>

<p>挂了号我就在拥挤的人群中挤上电梯来到了七楼。周围的人都紧绷着脸，显得皱巴巴的脸上又多了几条沟壑。这也就是为什么我不愿意来医院的原因，它会让我觉得每个人都得了绝症一样，但我却很喜欢雷雨天气前的压抑气氛，它让我感到莫名很放松。旁边的男子推着一个老太太从我旁边经过，他握着轮椅的手指关节狠狠用力，关节处皮肤下的骨头忽隐忽现。前面的人都自觉的往边上靠了靠给他让出了一条路，他低声说了句谢谢就推着轮椅匆匆离开了。看到大家麻木又机械地做着值得夸赞的事情就感到很好笑，虽然心情都跌落到了谷底还是不忘互相尊重与礼貌待人。</p>
<p>我无聊的在诊室门口坐着，把手机从书包里拿出来看了看又放回去，反反复复了好几次也没等到叫我号。可能是因为我很少来医院的缘故吧，上次来医院的记忆都已经模糊不清了，只隐约记得是看的精神科，后面随便开了点药就痊愈了。当时药起的更多的是一种心理慰藉，仿佛落水者因为慌乱在不断尝试往岸边游时旁边的人大喊“离岸边只有一点点了啊”的鼓励，这次我也希望有人能告诉我我离岸边还有多远，这很普遍也很容易。</p>
<p>我再次拿出手机来看了看，已经快三点了，没感觉来医院快一个小时了，但等着也实在太难受了，罪犯在被宣判前是不是也是这样惴惴不安呢。我一个人在长廊里走来走去，又转而坐在椅子上。长廊左边就是窗户，外面还有太阳，透过树荫跳上窗台躲过空气中的灰尘悄悄打在地上发出细碎轻巧的声音。保洁阿姨把地面拖得发亮，水分还没有挥发，湿漉漉的地面闪着黄色的光，不知不觉想到了傍晚的海面上晃动着的金色碎片，不停的破碎又重组，不同于打碎的玻璃，海面的碎片有着更加柔和的边缘和多变的形状。</p>
<p>我向朋友撒了个谎。我既不想装作没看到消息而不回复，也不想告诉他我独自去医院了，更烦躁回去后接踵而至的“质问”，所以我任性地撒了个小小的谎言来规避掉这么多麻烦。但凭着我拙劣的演技没法做到完美，一点点的紧张就差点露馅，好在这个失误特别细微，如果不是我后来细细审视都疏忽了。谎言确实是一个很劣质的谎言，因为十分简单而缺乏细节也蒙混过关了。</p>
<p>看着屏幕上寥寥几条聊天记录，我松了一口气，身体在几秒内恢复了感觉，这才发现这里原来是这么的冷，明明左边就是太阳啊！直到等到医生叫到我的号了，我都感觉医院里的天气是不是单独一个系统，外面是暖阳，里面是凛冬。</p>
<p>医生看上去有点老，但也很有精神，头发上的雪白告诉我应该是有资历的老医生了。和我印象中的诊断的流程不一样，整个检查都很简单，一个小时左右就结束了。结果对我而言算不上晴天霹雳但也是当头浇了一盆冷水吧。在来之前我就不奢求能有什么反转了，但是我期待的是医生能给我一些实质性的建议和药物，可惜什么都没有。他告诉我药物的副作用太大且治疗效果微乎其微，基本对于病情没有延缓作用，在我的再三请求下医生也没有给我开任何外用或内服的药，自然也没有给出任何实质性的建议，现在最好的办法就是顺其自然。可能这位医生深谙道家的思想吧，对患者也讲求无为而治。</p>
<p>如果来之前就不抱希望多好，至少现在也能保持一丝平静。我知道除了药物才能有那么一点效果之外其他的都是白费力气的，但药物和针剂的费用与副作用都不是我现在能够承担的。我失落的离开了诊室，并没有寻找到鼠灰色细条纹的麻质和服。如果你告诉我顺其自然那就不用再挣扎了？这样也好，保持着那一丝念头还是很悲惨的，好比明明是绝症病人但就要吊着你一口气让你舍不得放弃治疗去尝尽所有方法以及痛苦之后才撒手人寰一般。</p>
<p>我出了医院，颓然的坐在公交车站等车，点了一杯果汁希望能让自己放松一下，但还是提不起任何精神。周围的人有说有笑，我只好坐在那条窄的像横栏的板凳上，腘窝紧紧夹住它的边缘和底部，脊柱也不自觉弯曲成拱桥的形状，双手和头部往前倾来保持平衡。</p>
<p>只能这样了，不然没法坐稳。</p>
<p>从两年前刚发现时的轻视，再到整天焦虑，再到今天，不知道算是释然了还是放弃了，反正我知道我可以不用做那些无谓的尝试了。我早就身心俱疲，生活也被毁的一团糟，就算被丢弃在垃圾桶边上等着回收加工的破旧布偶玩具也不过如此了。晚上七点，我回到了学校。还没有来得及休息，就又匆匆忙忙的前往图书馆。已经耽误了太多时间了，不管以后是什么，至少现在的我还没有选择。</p>
]]></content>
      <categories>
        <category>拾穗者</category>
      </categories>
  </entry>
  <entry>
    <title>马克思主义者的悲伤</title>
    <url>/2020/11/06/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E8%80%85%E7%9A%84%E6%82%B2%E4%BC%A4/</url>
    <content><![CDATA[<p>又是遭受这样令人焦虑的痛苦，如同花园里修剪的整整齐齐的洋苏草被顽皮的小男孩随意践踏成东倒西歪。</p>
<a id="more"></a>

<p>我维持着尴尬，就像维持着我可怜的尊严，那段路现在回想起来也会让我感到心里隐隐刺痛。</p>
<p>雾气萦绕着的灰天，入冬微微冰凉的空气，忽远忽近的争论声，还有脚下坑坑洼洼的石砖路和旁边粗糙的绿化树，只有这些是我这一段百无聊赖的路程的伴侣。</p>
<p>我试图抚摸他们不光滑的肌肤，倾听他们在风中的诉说，融入静谧的氛围。</p>
<p>我企图推翻笛卡尔的哲学起点，探索叔本华脑中存在的世界，沉寂到尼采地虚无世界里，像贝克莱一样思考。</p>
<p>可惜我失败了，我没能挣脱外界缠绕在我身上千丝万缕的联系，我没能构造出我以为更好的抽象世界，我没能彻底否认我经历的一切。</p>
<p>这就是马克思主义者的悲伤吗？</p>
<p>这样的世界，再也不好了。</p>
]]></content>
      <categories>
        <category>拾穗者</category>
      </categories>
  </entry>
</search>
